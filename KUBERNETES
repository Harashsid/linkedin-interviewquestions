
1. Your pod keeps getting stuck in CrashLoopBackOff, but logs show no errors. How would you approach debugging and resolution?

2. You have a StatefulSet deployed with persistent volumes, and one of the pods is not recreating properly after deletion. What could be the reasons, and how do you fix it without data loss?

3. Your cluster autoscaler is not scaling up even though pods are in Pending state. What would you investigate?

4. A network policy is blocking traffic between services in different namespaces. How would you design and debug the policy to allow only specific communication paths?

5. One of your microservices has to connect to an external database via a VPN inside the cluster. How would you architect this in Kubernetes with HA and security in mind?

6. You're running a multi-tenant platform on a single EKS cluster. How do you isolate workloads and ensure security, quotas, and observability for each tenant?

7. You notice the kubelet is constantly restarting on a particular node. What steps would you take to isolate the issue and ensure node stability?

8. A critical pod in production gets evicted due to node pressure. How would you prevent this from happening again, and how do QoS classes play a role?

9. You need to deploy a service that requires TCP and UDP on the same port. How would you configure this in Kubernetes using Services and Ingress?

10. An application upgrade caused downtime even though you had rolling updates configured. What advanced strategies would you apply to ensure zero-downtime deployments next time?

11. Your service mesh sidecar (e.g., Istio Envoy) is consuming more resources than the app itself. How do you analyze and optimize this setup?

12. You need to create a Kubernetes operator to automate complex application lifecycle events. How do you design the CRD and controller loop logic?

13. Multiple nodes are showing high disk IO usage due to container logs. What Kubernetes features or practices can you apply to avoid this scenario?

14. Your Kubernetes cluster's etcd performance is degrading. What are the root causes and how do you ensure etcd high availability and tuning?

15. You want to enforce that all images used in the cluster must come from a trusted internal registry. How do you implement this at the policy level?

16. You're managing multi-region deployments using a single Kubernetes control plane. What architectural considerations must you address to avoid cross-region latency and single points of failure?

17. During peak traffic, your ingress controller fails to route requests efficiently. How would you diagnose and scale ingress resources effectively under heavy load?
18. How do you drain a Kubernetes node without downtime?
19. What causes pod crashes only on new autoscaled nodes?
20. How do you securely manage secrets across environments?
21. HPA is not scaling under load. Why?
22. How do you debug pod-to-pod network flakiness?
23. How do you isolate teams in a shared cluster?
24. What’s your strategy for backing up PostgreSQL/Kafka in K8s?
25.What broke after a Kubernetes upgrade?
26.What happens in the background when you run "kubectl apply -f pod?
27. How will you troubleshoot when a pod returns with an OOM (Out Of Memory) error?
28.You’re getting a CrashLoopBackOff error so what steps will you take to troubleshoot it? 29.What does an ImagePullBackOff error mean, and how do you resolve it?
30. What types of Kubernetes upgrade strategies do you know? When should each one be used? Explain with respect to cost optimization and minimizing downtime.
31.How will you troubleshoot when users face latency in the pod?

32. You are the DevOps engineer handling production. The application works fine locally, but users complain of downtime. What steps will you take to troubleshoot this?
33.Let’s say your application is deployed on Kubernetes. What happens in the background when a user clicks the login button? Describe how the request flows through the Kubernetes components.
34.How does Kubernetes determine that a readiness probe is ready to take the traffic?
35. How do you prevent noisy neighbors?
36.Can you roll out config changes without restarting pods?
37. Do you know about taints and tolerations? If so, how are they used?
38.What are the use cases of ConfigMaps and Secrets? Can we attach them as volumes?
39. How does RBAC work? How does it connect with the user?
40. How do you give permissions to cluster-scoped resources? Which one is used?
41. What are health probes? Explain what they do exactly.
42.What are Kubernetes volumes and how do they work
43.What are storage classes in Kubernetes?
44.What is Ingress? Why is it used? Explain its workflow.
45. What do you mean by headless service? 
46.pod is stuck in CrashLoopBackOff, but the logs don’t show any errors. Where would you start debugging?
47.StatefulSet pod with a persistent volume isn’t coming back after deletion. How would you recover it without risking data loss?
48.The cluster autoscaler isn’t scaling up, even though some pods are in a Pending state. What would you check to understand why?
49.A network policy is unintentionally blocking traffic between services in different namespaces. How would you design and debug it to allow only the right communication paths?
50.One of your microservices needs to connect to an external database through a VPN inside the cluster. What would your architecture look like to ensure security and high availability?
51.You’re running a multi-tenant platform on a single EKS cluster. How do you isolate workloads and enforce quotas, security, and observability for each tenant?
52.The kubelet is restarting frequently on a specific node. How would you isolate the issue and stabilize the node?
53.A critical pod in production got evicted due to node pressure. How can you prevent this from happening again? And how do Kubernetes QoS classes factor in?
54.You need to deploy a service that requires both TCP and UDP on the same port. How would you configure this correctly in Kubernetes?
55.An application upgrade caused downtime, even though you had rolling updates enabled. What would you do differently to ensure truly zero-downtime deployments?
56. You’ve deployed an app to Azure Kubernetes Service (AKS) and it fails health checks randomly. How do you debug this end-to-end?
57.  In a canary deployment to production, half the traffic returns 502, while others succeed. Walk us through your troubleshooting approach.
58.  You see high CPU usage in one pod, but logs look clean. What next?
59. What’s your approach to disaster recovery for stateful apps running on containers?
60. What in Pod Disruption Budget (PDB) in K8s?
61.How does DNS resolution work inside a pod?
62. What does the Kubernetes controller manager do during a Deployment?
63.What happens when a node with local emptyDir volumes gets scaled down?
64.After a deployment, 30% of users report slow response times?
65.How do you enforce runtime security in Kubernetes?
66.HPA vs VPA vs Karpenter — when do you NOT use each?
→ Bonus:
How would you simulate HPA behavior in staging without real traffic?
67.Tell me about the last Kubernetes outage you debugged.
  How do you handle pod eviction during node maintenance in AKS?
	What are taints and tolerations, and when would you use them?
	How do you configure pod affinity rules to ensure certain workloads run on the same node?
	Deployment vs. StatefulSet – When to use which?
	How does the Kubernetes Scheduler work?
	Basic folder structure of a Helm chart. What commands do you use to deploy with Helm?
	What’s the impact of setting aggressive liveness probes — how can it lead to cascading failures?
	Why use Kubernetes over standalone containers in production?
	How would you troubleshoot CrashLoopBackOff?
	How do you expose an app externally in Kubernetes?
	Explain the basic structure of a Service Mesh (Istio/others) for microservices.
	Your pod is in CrashLoopBackOff. There’s no useful log output. What next?
        You deployed a new version. Latency spiked. No errors. What now?
	You’re paged at 2 AM: 503s on the main app, but infra looks fine?
        Your cost just spiked 3x in 24 hours
	A secret was leaked in a public container image.
	The entire dev team lost access to the cluster. Prod is unaffected.
        A rollout failed, your app is now unstable — Helm hooks block rollback.
How does CoreDNS handle plugin chain resolution
Roll back a failed Helm release. What’s your exact command chain?
Node is Ready, but kubelet logs are silent. What now?
A prod pod restarts 8 times/hour. Logs look fine. What’s your triage plan?
Secure gRPC traffic across K8s namespaces
Helm worked in staging but broke in prod. Explain the failure class.
How do you debug intermittent network drops between services inside a Kubernetes cluster?
 What is your process to test a new ingress rule before applying it globally in production?
 How do you configure Kubernetes audit logs to detect unauthorized API requests?
 In what scenarios would you isolate workloads using Kubernetes RuntimeClasses?
 How do you integrate policy-as-code (OPA/Conftest) with Terraform to enforce security rules?
 What’s the difference between Terraform import, taint, and state mv — and when would you use each?
 How do you handle state locking conflicts in a remote Terraform team setup?
 How would you manage feature-specific infrastructure branches without environment drift?
Your pod keeps getting stuck in CrashLoopBackOff, but logs show no errors. How would you approach debugging and resolution?
You have a StatefulSet deployed with persistent volumes, and one of the pods is not recreating properly after deletion. What could be the reasons, and how do you fix it without data loss?
Your cluster autoscaler is not scaling up even though pods are in Pending state. What would you investigate?
 A network policy is blocking traffic between services in different namespaces. How would you design and debug the policy to allow only specific communication paths?
One of your microservices has to connect to an external database via a VPN inside the cluster. How would you architect this in Kubernetes with HA and security in mind?
You're running a multi-tenant platform on a single EKS cluster. How do you isolate workloads and ensure security, quotas, and observability for each tenant?
You notice the kubelet is constantly restarting on a particular node. What steps would you take to isolate the issue and ensure node stability?
A critical pod in production gets evicted due to node pressure. How would you prevent this from happening again, and how do QoS classes play a role?
You need to deploy a service that requires TCP and UDP on the same port. How would you configure this in Kubernetes using Services and Ingress?
An application upgrade caused downtime even though you had rolling updates configured. What advanced strategies would you apply to ensure zero-downtime deployments next time?
Your service mesh sidecar (e.g., Istio Envoy) is consuming more resources than the app itself. How do you analyze and optimize this setup?
You need to create a Kubernetes operator to automate complex application lifecycle events. How do you design the CRD and controller loop logic?
Multiple nodes are showing high disk IO usage due to container logs. What Kubernetes features or practices can you apply to avoid this scenario?
Your Kubernetes cluster's etcd performance is degrading. What are the root causes and how do you ensure etcd high availability and tuning?
You want to enforce that all images used in the cluster must come from a trusted internal registry. How do you implement this at the policy level?
You're managing multi-region deployments using a single Kubernetes control plane. What architectural considerations must you address to avoid cross-region latency and single points of failure?
 During peak traffic, your ingress controller fails to route requests efficiently. How would you diagnose and scale ingress resources effectively under heavy load?
Your Kubernetes cluster is experiencing cascading failures during peak traffic. Walk through your troubleshooting methodology
Design a deployment strategy for a legacy monolith that can’t have downtime but needs to migrate to microservices
You deploy on Friday afternoon and traffic drops 30% with no error alerts. Your CEO is asking questions. What’s your investigation process?
How do you handle secrets rotation for 500+ services without causing outages?
How do you implement chaos engineering in production without customer impact?
How would you design and implement a secure and scalable CI/CD pipeline from code commit to production deployment?
 Describe a time when you resolved a production outage quickly. What was your approach and how did you ensure minimal impact to end users?
 Your Kubernetes HPA (Horizontal Pod Autoscaler) is not scaling down even when CPU usage is low. What could be the root causes?
 You are required to perform maintenance on a node without causing service disruption. How would you safely drain the node and ensure high availability?
 Explain the differences between canary deployments and blue/green deployments. When would you prefer one over the other?
 How do you enforce resource quotas, image scanning, and prevent the creation of certain Kubernetes services in production?
 How would you manage application rollouts across multiple Kubernetes clusters in different environments?
 A pod in production is being OOMKilled frequently. How do you identify the root cause and prevent future occurrences?
 Your Kubernetes cluster’s autoscaler is launching too many nodes during peak hours, causing budget concerns. How do you control autoscaling more efficiently?
 You are designing a multi-region Kubernetes disaster recovery strategy for a regulated enterprise. How do you plan backup, failover, and restoration?
 Most DevOps candidates freeze when asked about real disasters they’ve never faced.
You deploy on Friday afternoon and traffic drops 30% with no error alerts. Your CEO is asking questions. What’s your investigation process?
→ Check recent deployments - rollback immediately if suspicious
→ Verify load balancer health and routing rules
→ Monitor database connections and query performance
→ Check CDN and cache hit rates
→ Review third-party API dependencies and response times
→ Analyze traffic patterns by geography and user segments
→ Look for silent failures in application logs

👉 Design a backup strategy for a distributed database that processes 50TB daily while maintaining ACID compliance across regions.

→ Use database-native backup tools for consistent snapshots
→ Implement continuous WAL shipping between regions
→ Schedule full backups during maintenance windows
→ Test point-in-time recovery monthly with real scenarios
→ Maintain 3-2-1 backup rule across different storage tiers
→ Monitor backup completion and validate integrity automatically
→ Document RTO/RPO requirements for each failure scenario

👉 Your entire CI/CD pipeline was compromised and malicious code reached production. Walk through your containment and recovery plan.

→ Immediately disable all CI/CD systems and deployment processes
→ Isolate affected production systems from network traffic
→ Rollback to last verified clean deployment
→ Scan production infrastructure for compromise indicators
→ Rotate all secrets, API keys, and deployment credentials
→ Notify incident response team and legal/compliance
→ Preserve forensic evidence and audit logs

👉 Implement a deployment freeze process that can halt 200+ simultaneous deployments across teams within 60 seconds.

→ Central API service that all deployment tools must check before proceeding
→ Feature flag system with global emergency kill switch
→ Automated Slack/email notifications to all teams
→ Override mechanism for critical security patches only
→ Real-time dashboard showing freeze status and affected deployments
→ Clear escalation path and approval process for freeze decisions
→ Audit logging for all freeze events and overrides

👉 Design a resource allocation strategy where dev environments cost 80% less than production but maintain realistic testing conditions.

→ Use auto-scaling with lower limits and smaller instance types
→ Implement environment scheduling - auto-shutdown evenings/weekends
→ Share databases across teams with isolated schemas
→ Use data sampling instead of full production datasets
→ Leverage spot instances for non-critical testing workloads
→ Container orchestration for better resource utilization
→ Monitor and alert on dev environment cost overruns
1. You deployed a StatefulSet for a database cluster, but all pods try to connect to the same storage volume. What’s wrong, and how do you fix it?
2. You need to ensure that a job runs at 2 a.m. every day in Kubernetes. How would you do it?
3. You’re asked to allow a specific team to only create pods in a single namespace but not delete them. How would you design the RBAC?
4. A deployment is supposed to maintain 5 replicas, but only 3 are running. How would you diagnose the issue?
5. You want to ensure that only pods with a certain label can talk to your backend service. How would you implement this?
6. The CPU usage of your app suddenly spikes, and autoscaling isn’t kicking in. Where do you start debugging?
7. You need to ensure that your production workloads don’t run on preemptible or spot nodes. How do you configure this in your cluster?
8. Your developers want to test against production data safely. How do you enable that in a secure, isolated way?
9. You’re seeing a high number of CrashLoopBackOff events. How would you approach debugging them?
10. An application deployment is successful, but readiness probes keep failing. What are your next steps?
11. You want to expose your internal app to the internet using HTTPS with a custom domain. What’s your approach?
12. You’re seeing DNS resolution delay for services inside the cluster. How do you identify the cause?
13. You want to enforce that all containers have resource limits and requests defined. How do you do that?
14. Your cluster is under heavy load. You want to prioritize critical pods over low-priority ones. How do you do this in Kubernetes?
15. You need to drain a node for maintenance but want to ensure zero downtime for the services running. How do you plan this?
16. One of your containers is stuck in Terminating state for a long time. How do you troubleshoot and force stop it?
17. You want to deploy a pod that can access AWS S3 without using hardcoded credentials or secrets. What’s your approach?
18. You see that logs from certain pods are missing in your central logging system. What could be wrong?
19. A team pushed a config that caused downtime across services. How would you implement safeguards to prevent this in the future?
20. A pod needs to mount a file from a Git repo at startup. What are your options?
21. You need to deploy an application across multiple clusters with different configurations. How would you manage that?
22. You’ve enabled Horizontal Pod Autoscaler, but it doesn't scale down even after CPU usage drops. What could be causing it?
23. A pod takes 2 minutes to start due to initialization logic. How can you stop Kubernetes from marking it as unhealthy?
24. A container exits silently without writing anything to logs. How can you gather more info about its lifecycle?
1. You deploy a Pod, but it remains in Pending state. What steps do you take to troubleshoot?

2. How would you ensure high availability for your application running in Kubernetes?

3. You need to run a one-time database migration before your app starts. How do you implement that in Kubernetes?

4. Explain how Kubernetes handles service discovery internally. How would you troubleshoot service DNS issues?

5. You want to deploy an app that requires persistent data. How would you provision storage? What options do you have?

6. A service is not accessible from outside the cluster. How would you debug it step-by-step?

7. You want internal microservices to communicate securely over TLS. How would you design this in Kubernetes?

8. How do you restrict a certain pod from accessing the internet, but allow internal cluster traffic?

9. Your app uses a database outside Kubernetes, and the connection randomly fails. How do you isolate the issue?

10. A pod cannot resolve a service name (my-db-service). What networking components would you check?

11. You need to rotate secrets used by multiple pods with zero downtime. What’s your approach?

12. An app fails because it can’t find an environment variable. How do you troubleshoot ConfigMap usage?

13. You have different config values for dev, staging, and prod. How do you manage this with Kubernetes best practices?

14. Your team accidentally committed secrets to Git. How do you handle secrets more securely in Kubernetes?


15. How do you inject configuration dynamically without restarting pods?
16. You want to give read-only access to logs for a team. How do you configure RBAC?
17. A container image has a known CVE vulnerability. How do you enforce using only scanned/trusted images?
18. You need to allow only specific pods to pull images from a private registry. How do you do this securely?
19. A developer created a service account that can delete resources cluster-wide. How do you detect and restrict such actions?
20. You want to audit who accessed which Kubernetes resources. What features do you enable?
21. You deployed a new version of your app and users report 500 errors. What is your rollback strategy?
22. You need zero-downtime deployments with rollback support. Which Kubernetes features help you achieve that?
23. Your app is slow under load. How do you configure autoscaling properly (both HPA and VPA)?
24. What steps would you take to canary deploy a new feature to only 10% of users?
25. You want to control how many pods are unavailable during updates. How do you configure this?
26. A node is in NotReady state. What might be the causes, and how do you fix it?
27. You observe intermittent pod restarts. What logs and events would you look at to debug this?
28. You have a memory leak in your app. How can you use Kubernetes features to mitigate the impact?


